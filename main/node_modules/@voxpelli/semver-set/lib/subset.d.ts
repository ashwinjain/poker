export type CompactedComparatorFixed = [
// @ts-ignore
import('semver').Comparator];

// @ts-ignore
export type CompactedComparatorRange = [import('semver').Comparator | undefined, import('semver').Comparator | undefined];
export type CompactedComparator = [Comparator] | CompactedComparatorRange;
/**
 * @param {import('semver').Range} sub
 * @param {import('semver').Range} dom
 * @param {import('semver').Options} options
 * @returns {CompactedComparator[]|undefined}
 */

// @ts-ignore
export function rangeIntersection(sub: import('semver').Range, dom: import('semver').Range, options: import('semver').Options): CompactedComparator[] | undefined;
/**
 * @param {CompactedComparator[]} intersection
 */
export function sortRangeIntersection(intersection: CompactedComparator[]): void;
import Comparator = require("semver/classes/comparator");
//# sourceMappingURL=subset.d.ts.map