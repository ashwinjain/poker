"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("semver/ranges/valid"),r=require("@voxpelli/semver-set"),t=require("jju"),n=require("ramda"),a=require("sort-package-json");function _interopDefaultLegacy(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var i=_interopDefaultLegacy(e),s=_interopDefaultLegacy(t),o=_interopDefaultLegacy(n);const u={description:function appendString(e="",r=""){if(e&&r)return`${e} ${r}`;return e||r},main:function replaceString(e="",r=""){return r||e},bin:function mergeBin(e={},r={},t={},n={}){"string"==typeof e&&(e=t.name?{[t.name]:e}:{});"string"==typeof r&&(r=n.name?{[n.name]:r}:{});const a={...e};return Object.keys(r).forEach((e=>{a[e]?a[`${e}-${n.name||0}`]=r[e]:a[e]=r[e]})),a},repository:function mergeRepository(e="",r={}){return e||r},dependencies:mergeDependencies,devDependencies:mergeDependencies,peerDependencies:mergeDependencies,engines:mergeDependencies};function mergeObject(e={},r={}){return{...e,...r}}function mergeDependencies(e={},t={}){return o.default.isEmpty(e)?t:o.default.isEmpty(t)?e:mergeObject(e,o.default.mapObjIndexed(((t,n)=>i.default(t)&&i.default(e[n])&&r.semverIntersect(t,e[n])||t),t))}function mergeJson(e={},r={}){let t;return t=o.default.isEmpty(e)?{...r}:o.default.isEmpty(r)?{...e}:mergeObject(e,o.default.mapObjIndexed(((t,n)=>{const a=e[n];if(!a)return t;if(Reflect.has(u,n))return u[n](a,t,e,r);const i=typeof a,s=typeof t;return Array.isArray(a)||Array.isArray(t)?function mergeList(e=[],r=[]){return Array.isArray(e)||(e=[e]),Array.isArray(r)||(r=[r]),o.default.union(e,r)}(a,t):"string"===i&&"string"===s?function mergeString(e="",r=""){return e||r}(a,t):"object"===i&&"object"===s?mergeObject(a,t):(console.warn(`Package Merge Warning: the field "${n}" in two packages are not the same type. (types: ${i},${s})`),t)}),r)),a.sortPackageJson(t)}const c={mode:"json"};exports.default=function mergeJsonStr(e,r){return a.sortPackageJson(s.default.update(e,mergeJson(s.default.parse(e,c),s.default.parse(r,c)),c))},exports.mergeJson=mergeJson;
